# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/BalrogBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    #BalrogBundle\:
    #    resource: '../../src/BalrogBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
    #    exclude: '../../src/BalrogBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    #BalrogBundle\Controller\:
    #    resource: '../../src/BalrogBundle/Controller'
    #    public: true
    #    tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # BalrogBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    # ...
    admin.level:
        class: BalrogBundle\Admin\LevelAdmin
        arguments: [~, BalrogBundle\Entity\Level, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Level, group: 'Game - Balrog' }
        public: true

    admin.monster:
        class: BalrogBundle\Admin\MonsterAdmin
        arguments: [~, BalrogBundle\Entity\Monster, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Monster, group: 'Game - Balrog' }
        public: true

    admin.equipment:
        class: BalrogBundle\Admin\EquipmentAdmin
        arguments: [~, BalrogBundle\Entity\Equipment, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Equipment, group: 'Game - Balrog' }
        public: true

    admin.hero:
        class: BalrogBundle\Admin\HeroAdmin
        arguments: [~, BalrogBundle\Entity\Hero, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Hero, group: 'Game - Balrog' }
        public: true

    admin.inventaire:
        class: BalrogBundle\Admin\InventaireAdmin
        arguments: [~, BalrogBundle\Entity\Inventaire, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Inventaire, group: 'Game - Balrog' }
        public: true



